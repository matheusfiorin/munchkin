linter:
  rules:
    # ERRORS
    - avoid_returning_null_for_future
    - cancel_subscriptions
    - close_sinks
    - control_flow_in_finally # avoid
    - empty_statements # avoid
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - prefer_void_to_null
    - hash_and_equals

    # STYLE
    - camel_case_types
    - camel_case_extensions
    - library_names
    - library_prefixes
    - non_constant_identifier_names
    - directives_ordering
    - lines_longer_than_80_chars # avoid
    - curly_braces_in_flow_control_structures
    - prefer_single_quotes

    # DOCUMENTATION
    - slash_for_doc_comments
    #- package_api_docs # prefer
    #- public_member_api_docs # prefer
    #- comment_references # Unused because https://github.com/dart-lang/sdk/issues/36974

    # USAGE
    - implementation_imports
    - avoid_relative_lib_imports # prefer
    - prefer_adjacent_string_concatenation
    - prefer_interpolation_to_compose_strings # prefer
    - unnecessary_brace_in_string_interps # avoid
    - prefer_collection_literals
    - avoid_function_literals_in_foreach_calls # avoid
    - prefer_iterable_whereType
    - prefer_function_declarations_over_variables
    - unnecessary_lambdas
    - prefer_equal_for_default_values
    - avoid_init_to_null
    - unnecessary_getters_setters
    #- unnecessary_getters # prefer # Disabled pending fix: https://github.com/dart-lang/linter/issues/23
    - prefer_expression_function_bodies # consider
    - unnecessary_this
    - prefer_initializing_formals
    - type_init_formals
    - empty_constructor_bodies
    - unnecessary_new
    - unnecessary_const
    - avoid_catches_without_on_clauses # avoid
    - avoid_catching_errors
    - use_rethrow_when_possible

    # DESIGN
    - use_to_and_as_if_applicable # prefer
    #- one_member_abstracts # avoid
    - prefer_mixin
    - prefer_final_fields # prefer
    - use_setters_to_change_properties
    - avoid_setters_without_getters
    - avoid_returning_null # avoid
    - avoid_returning_this # avoid
    - type_annotate_public_apis # prefer
    - prefer_typing_uninitialized_variables # consider
    - omit_local_variable_types # avoid
    - avoid_types_on_closure_parameters # avoid
    - avoid_return_types_on_setters # avoid
    - prefer_generic_function_type_aliases
    - avoid_private_typedef_functions # prefer
    - use_function_type_syntax_for_parameters # consider
    - avoid_positional_boolean_parameters # avoid
    - avoid_equals_and_hash_code_on_mutable_classes # avoid
    - avoid_null_checks_in_equality_operators

analyzer:
  errors:
    avoid_returning_null_for_future: error
    cancel_subscriptions: error
    close_sinks: error
    control_flow_in_finally: error
    empty_statements: error
    iterable_contains_unrelated_type: error
    list_remove_unrelated_type: error
    literal_only_boolean_expressions: error
    no_adjacent_strings_in_list: error
    no_duplicate_case_values: error
    prefer_void_to_null: error
    hash_and_equals: error
